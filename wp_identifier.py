import concurrent.futures
import requests

def check_wordpress(domain):
    url = f"http://{domain}"
    try:
        response = requests.get(url)
        if "wp-content" in response.text:
            return domain
        else:
            return None
    except requests.exceptions.RequestException:
        return None

file_path = "domains.txt"

with open(file_path, "r") as file:
    domains = file.read().splitlines()

wordpress_domains = []

total_domains = len(domains)
processed_domains = 0

with concurrent.futures.ThreadPoolExecutor() as executor:
    print("Checking domains for WordPress applications...")
    # Submit the domain checks to the executor
    future_to_domain = {executor.submit(check_wordpress, domain): domain for domain in domains}

    # Process the completed futures
    for future in concurrent.futures.as_completed(future_to_domain):
        domain = future_to_domain[future]
        result = future.result()
        processed_domains += 1

        if result is not None:
            wordpress_domains.append(result)

        percentage = (processed_domains / total_domains) * 100
        print(f"Domain {processed_domains}/{total_domains} ({percentage:.2f}%) processed.")

print("\nWordPress domains:")
for domain in wordpress_domains:
    print(domain)